name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job pour installer Docker Compose une seule fois
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker Compose
        run: |
          COMPOSE_VERSION=2.20.2
          curl -L "https://github.com/docker/compose/releases/download/v${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o docker-compose
          chmod +x docker-compose
      - name: Upload Docker Compose
        uses: actions/upload-artifact@v3
        with:
          name: docker-compose
          path: docker-compose

  # Job de build et test, dépend de 'setup'
  build-and-test:
    runs-on: ubuntu-latest
    needs: setup  # Ce job attend que 'setup' soit terminé

    steps:
      - name: Download Docker Compose
        uses: actions/download-artifact@v3
        with:
          name: docker-compose
      - name: Install Docker Compose
        run: |
          sudo mv docker-compose /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build and run Docker Compose with tests
        run: |
          chmod +x exec.sh
          ./exec.sh
        env:
          DOCKER_BUILDKIT: 1

      - name: Run tests
        run: |
          echo "Running tests..."

          echo "Testing Kong API Gateway..."
          for i in {1..5}; do
            if docker-compose exec -T kong curl -s http://localhost:8000 | grep 'kong'; then
              echo "Kong is up and running!"
              break
            else
              echo "Kong is not ready yet, retrying in 5s..."
              sleep 5
            fi
          done

          echo "Testing Postgres database for Kong..."
          docker-compose exec -T kong-db psql -U kong -d kong -c '\l'

          echo "Testing Keycloak..."
          docker-compose exec -T keycloak curl -s http://localhost:8080 | grep 'Keycloak'

      - name: Check Docker logs on failure
        if: failure()
        run: |
          echo "Checking logs for all services..."
          docker-compose logs
      
      - name: Scan Docker Images for Vulnerabilities
        run: |
          echo "Running security scan with Trivy..."
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image kong-oidc:latest

      - name: Run End-to-End Tests
        run: |
          echo "Running End-to-End tests..."

  # Job de déploiement, dépend de 'build-and-test' qui dépend de 'setup'
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Download Docker Compose
        uses: actions/download-artifact@v3
        with:
          name: docker-compose
      - name: Install Docker Compose
        run: |
          sudo mv docker-compose /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Verify Docker Compose installation
        run: |
          docker-compose --version

      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "Deploying to staging environment..."
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker pull ouledelbakri/kong-oidc:latest
          docker-compose down
          docker-compose up -d
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  # Job de scan de sécurité, dépend de 'deploy'
  security-scan:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Run OWASP ZAP scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'http://localhost:8000'

  # Job de nettoyage, dépend de 'security-scan'
  cleanup:
    runs-on: ubuntu-latest
    needs: security-scan
    if: always()
    steps:
      - name: Download Docker Compose
        uses: actions/download-artifact@v3
        with:
          name: docker-compose
      - name: Install Docker Compose
        run: |
          sudo mv docker-compose /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Cleanup
        run: |
          docker-compose down
          docker system prune -af
